;PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]

[native_common]
platform = native
build_flags = 
    -std=c++14 
    -fno-math-errno
    -Wall 
    -D NDEBUG 
    -D DESKTOP
    -DLIN_RANDOM_SEED=358264 
    -O3
    -D SERIAL3_RX_BUFFER_SIZE=1024
lib_ldf_mode = chain+
build_unflags =
  -fsingle-precision-constant
  -fmath-errno
lib_archive = false
lib_compat_mode = off
build_src_filter = +<common> +<targets/calc_main.cpp>
test_build_project_src = true

[hi5_common]
platform = sifive
framework = freedom-e-sdk
board = hifive1-revb
build_flags = 
    ; -Werror   
    -std=c++17
    -O2
    -g
    -Wall 
    -ffunction-sections 
    -fno-exceptions 
    ; -fno-rtti 
    ; -fno-nonansi-builtins 
    ; -fno-use-cxa-atexit 
    ; -fno-threadsafe-statics
    -nostartfiles 
    ; -Wl,-Map,blinky.map
    -lstdc++
lib_ldf_mode = chain+
build_unflags =
  -fsingle-precision-constant
  -fmath-errno
lib_archive = false
lib_compat_mode = off
test_build_project_src = true

[teensy_common]
platform = teensy
board = teensy36
framework = arduino
build_flags = 
    -std=c++14 
    -Werror   
    -fno-math-errno
    -Wall 
    -D NDEBUG 
    -DLIN_RANDOM_SEED=358264 
    -O3
lib_ldf_mode = chain+
build_unflags =
  -fsingle-precision-constant
  -fmath-errno
lib_archive = false
lib_compat_mode = off
build_src_filter = +<targets/imu.cpp> +<targets/blink.cpp> +<common>
test_build_project_src = true

[uno_common]
platform = atmelavr
board = uno
framework = arduino
build_flags = 
    -std=c++14 
    -Werror   
    -fno-math-errno
    -Wall 
    -D NDEBUG 
    -DLIN_RANDOM_SEED=358264 
    -O3
lib_ldf_mode = chain+
build_unflags =
  -fsingle-precision-constant
  -fmath-errno
lib_archive = false
# lib_compat_mode = off
lib_deps =
  # RECOMMENDED
  # Accept new functionality in a backwards compatible manner and patches
  adafruit/Adafruit BNO055 @ ^1.6.1
  adafruit/Adafruit BusIO @ ^1.14.1
  adafruit/Adafruit Unified Sensor @ ^1.1.6
  Wire
  SPI
build_src_filter = 
test_build_project_src = true

[env:uno_mcl]
extends = uno_common
build_flags = ${uno_common.build_flags} -D FLIGHT -D AIR -D COMPACT
build_src_filter = ${uno_common.build_src_filter} +<arduino_common> +<targets/uno_mcl.cpp>

[env:uno_blink]
extends = uno_common
build_flags = ${uno_common.build_flags} -D FLIGHT -D AIR -D COMPACT
build_src_filter = ${uno_common.build_src_filter} +<targets/blink.cpp>

[env:uno_imu]
extends = uno_common
build_flags = ${uno_common.build_flags} -D FLIGHT -D AIR -D COMPACT
build_src_filter = ${uno_common.build_src_filter} +<targets/imu.cpp>

[env:native]
extends = native_common
build_flags = ${native_common.build_flags} -D FLIGHT -D AIR -D COMPACT

[env:native_test]
extends = native_common
build_flags = ${native_common.build_flags} -D FLIGHT -D AIR -D COMPACT
build_src_filter = +<common> -<targets>

[env:teensy]
extends = teensy_common
build_flags = ${teensy_common.build_flags} -D FLIGHT -D AIR -D COMPACT

[env:hi5]
extends = hi5_common
build_flags = ${hi5_common.build_flags} -D FLIGHT -D AIR -D COMPACT
build_src_filter = +<riscv> -<common> -<targets>

[env:hi5-fade]
extends = hi5_common
build_flags = ${hi5_common.build_flags} -D FLIGHT -D AIR -D COMPACT
build_src_filter = +<riscv-fade> -<common> -<targets>

[env:hi5-hello]
extends = hi5_common
build_flags = ${hi5_common.build_flags} -D FLIGHT -D AIR -D COMPACT
build_src_filter = +<riscv-hello-world> -<common> -<targets>

[env:hi5-startup]
extends = hi5_common
build_flags = ${hi5_common.build_flags} -D FLIGHT -D AIR -D COMPACT
build_src_filter = +<riscv-startup> -<common> -<targets>

[env:hi5-led]
extends = hi5_common
build_flags = ${hi5_common.build_flags} -D FLIGHT -D AIR -D COMPACT
build_src_filter = +<riscv-led-blink> -<common> -<targets>

[env:hi5-uart]
extends = hi5_common
build_flags = ${hi5_common.build_flags} -D FLIGHT -D AIR -D COMPACT
build_src_filter = +<riscv-uart> -<common> -<targets>

; [custom_common]
; extends = fsw_common
; lib_deps = 
;     ${fsw_common.lib_deps} 
;     Wire 
;     SPI
; src_filter = +<common/> -<common/targets/>
; lib_extra_dirs = lib/common
; build_flags = ${fsw_common.build_flags} -D FLIGHT

; ;CUSTOM TARGET TEMPLATE:
; [env:your_target]
; extends = custom_common
; src_filter = +<fsw/targets/your_target.cpp>

; [env:sd]
; extends = custom_common
; src_filter = +<fsw/targets/sd.cpp>

; [env:read]
; extends = custom_common
; src_filter = +<fsw/targets/read.cpp>

; [env:thrust_test]
; extends = custom_common
; src_filter = +<fsw/targets/thrust_test.cpp>

; [env:gps_serial]
; extends = custom_common
; src_filter = +<fsw/targets/gps_serial.cpp>

; [env:led]
; extends = custom_common
; src_filter = +<fsw/targets/led.cpp>

; [env:simple_servo]
; extends = custom_common
; src_filter = +<fsw/targets/simple_servo.cpp>

; [env:all_servo]
; extends = custom_common
; src_filter = +<fsw/targets/all_servo.cpp>

; [env:imu_calibration]
; extends = custom_common
; src_filter = +<fsw/targets/imu_calibration.cpp>

; [env:read_imu]
; extends = custom_common
; src_filter = ${custom.src_filter} +<fsw/targets/read_imu.cpp>

; [env:read_imu_all]
; extends = custom_common
; src_filter = ${custom.src_filter} +<fsw/targets/read_imu_all.cpp>

; [hardware_test]
; extends = custom_common
; src_filter = +<fsw/targets/teensy_stub.cpp>

; [env:test_bmp_monitor]
; extends = hardware_test
; test_filter = test_bmp_monitor

; [env:test_imu_monitor]
; extends = hardware_test
; test_filter = test_imu_monitor

; [custom]
; platform = teensy
; board = teensy36
; framework = arduino
; build_flags = -std=c++14 -Werror -Wall -D UNITY_INCLUDE_DOUBLE -D NDEBUG -DLIN_RANDOM_SEED=358264 -O3
;     -D SERIAL4_RX_BUFFER_SIZE=1024
; src_filter = +<FCCode/>
; lib_deps = 
;     Wire
;     SPI
;     Adafruit Unified Sensor
;     Adafruit BMP280 Library
;     https://github.com/nox771/i2c_t3
; monitor_speed = 115200